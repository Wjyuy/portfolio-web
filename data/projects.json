[
  {
    "id": "project-1",
    "title": "ShoFriend",
    "description": "쇼프렌은 메신저,쇼핑몰을 합친 상품 판매 웹사이트입니다.",
    "goals": [
      "친구와 함께 쇼핑할때 메신저와 쇼핑 앱을 계속해서 오가야 하는데, 두 가지가 분리된 환경에서는 흐름이 끊기고 불편하다고 생각했습니다.",
      "두 애플리케이션을 합쳐 실시간 채팅, 친구 추천 시스템 등의 도입으로 사용자 체류 시간을 증가시켜 구매 전환율을 극대화 시키는것을 목표로 하는 프로젝트입니다."
    ],
    "period": "2025.05.07 - 2025.05.14",
    "status": "Completed",
    "features": [
      "AJAX 기반 비동기 방식으로 매끄럽고 빠른 사용자 경험 제공",
      "WebSocket을 이용한 실시간 채팅 지원",
      "친구 추천 시스템을 통한 사용자 맞춤형 상품 추천 알고리즘 구현",
      "구매자,판매자에 따른 페이지 레이아웃 차별화",
      "UUID를 적용한 상품 CRUD 구축",
      "카카오페이 API 를 이용한 결제 시스템 연동"
    ],
    "screenshots": [
      { "url": "/images/projects/portfolio1/portfoliomain.png", "caption": "메인 페이지" },
      { "url": "/images/projects/portfolio1/portfoliodatail.png", "caption": "상세 페이지" },
      { "url": "/images/projects/portfolio1/portfoliochat.png", "caption": "채팅" },
      { "url": "/images/projects/portfolio1/cart.png", "caption": "장바구니" },
      { "url": "/images/projects/portfolio1/checkout.png", "caption": "결제 페이지" }
    ],
    "contributions": {
      "role": "팀장",
      "responsibilities": [
        "기획, 설계, 개발 전 과정 총괄",
        "UI/UX 디자인 및 구현",
        "백엔드 및 프론트엔드 통합"
      ]
    },
    "technologies": {
      "frontend": ["JavaScript"],
      "backend": ["Java 17", "Spring Boot", "JSP & Servlet","Tomcat","Gradle"],
      "database": ["MySQL"],
      "deployment": [""]
    },
    "troubleshooting": [
      {
        "problem": "POST 전송 로직에서 CSRF 공격 방지 미비로 인한 보안 취약점 발견",
        "solution": "Spring Security의 CSRF 방어 기능을 도입하여, 결제 요청 시 서버에서 발급한 CSRF 토큰을 클라이언트(쿠키 또는 HTML 숨김 필드)에 전달하고, 클라이언트는 해당 토큰을 요청 헤더에 포함하여 서버로 전송하도록 구현",
        "result": "서버에서 검증함으로써 요청의 무결성 확보"
      },
      {
        "problem": "Tailwind CSS 다크 모드 적용 시 하이드레이션 오류 발생",
        "solution": "`useEffect`를 사용하여 클라이언트에서 테마 상태를 초기화하고, `html` 태그에 `dark` 클래스를 직접 토글하는 방식으로 해결",
        "result": "클라이언트-서버 간 불일치 없이 다크 모드 원활하게 동작"
      }
    ],
    "links": {
      "github": "https://github.com/Wjyuy/ShoFriend_Final",
      "demo": "https://your-portfolio.vercel.app",
      "article": "https://your-blog.com/portfolio-post"
    }
  },
  {
    "id": "project-2",
    "title": "온라인 쇼핑몰 백엔드 시스템",
    "description": "대규모 사용자 트래픽을 처리할 수 있는 확장성 있는 쇼핑몰 백엔드 API 시스템을 구축했습니다. 주문 처리, 상품 관리, 사용자 인증 기능을 포함합니다.",
    "period": "2024.01 - 2024.08",
    "status": "Completed",
    "features": [
      "JWT 기반 사용자 인증 및 권한 관리",
      "결제 시스템 연동 (PG사 API)",
      "상품 검색 및 필터링 기능",
      "관리자 페이지를 위한 RESTful API 제공",
      "NoSQL (MongoDB) 최적화"
    ],
    "screenshots": [],
    "contributions": {
      "role": "백엔드 리드 개발자",
      "responsibilities": [
        "API 아키텍처 설계 및 데이터베이스 스키마 디자인",
        "Node.js (NestJS) 기반 API 개발",
        "팀원 코드 리뷰 및 기술 지원"
      ]
    },
    "technologies": {
      "frontend": [],
      "backend": ["Node.js", "NestJS", "TypeScript", "Express", "JWT"],
      "database": ["MongoDB", "Redis"],
      "deployment": ["AWS EC2", "Docker", "Nginx"]
    },
    "troubleshooting": [
      {
        "problem": "대량 트래픽 발생 시 DB 성능 저하 문제",
        "solution": "MongoDB 인덱싱 최적화 및 Redis 캐싱 적용으로 쿼리 부하 감소",
        "result": "평균 응답 시간 50% 단축"
      }
    ],
    "links": {
      "github": "https://github.com/your-github/ecommerce-backend"
    }
  }
]